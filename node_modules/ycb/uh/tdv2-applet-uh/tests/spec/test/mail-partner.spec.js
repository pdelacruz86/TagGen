/* global browser, $, it, describe, before */

var chai = require('chai');
var chaiAsPromised = require('chai-as-promised');
var conditions = require('../lib/conditions');
var expect = chai.expect;
var locators = require('../lib/locators');
var when = require('mocha-bdd-when');

chai.use(chaiAsPromised);


var loginUser = function() {
    browser.signIn('demo_hanlon@att.net', 'att123');
    browser.get('/console?ctrl=Header&m_id=tdv2-applet-uh&site=style&partner=att');
};

describe('#check partner Mail', function () {
    before(function () {
        return browser.wait(function () {
            return browser.get('/console?ctrl=Header&m_id=tdv2-applet-uh&site=style&partner=att').then(function () {
                return true;
            });
        });
    });

    when(conditions['#base']).describe('#base', function () {
        it('link should exist', function () {
            var mail  = $(locators.Mail);

            browser.waitToBePresent(mail);
            expect(mail.isPresent()).to.eventually.equal(true, "Mail link does not exist");
        });

        it('should have href defined', function () {
            var mail  = $(locators.Mail);

            mail.getAttribute('href').then(function(href) {
                expect(href).to.contain('mail.yahoo.com/?.partner=sbc', "Mail href does not match");
            });
        });

        it('link navigates to AT&T T-guard login page', function () {
            var mail  = $(locators.Mail);

            browser.waitForReload(function() {
                mail.click();
            }, 6000).then(function() {
                browser.getCurrentUrl().then(function(url) {
                    expect(url).to.contain('loginprodx.att.net', "Link does not navigate to AT&T T-guard login page");
                });
            });
        });
    });

    when(conditions['#login']).describe('#login', function () {
        before(function () {
            loginUser();
            browser.get('/console?ctrl=Header&m_id=tdv2-applet-uh&site=style&partner=att');
        });

        it('mailcount should be present', function () {
            var mailCount  = $(locators.MailCount);

            browser.waitToBePresent(mailCount);
            expect(mailCount.isPresent()).to.eventually.equal(true, "Mail count is not present");
        });

        it('mailpreview should be present', function () {
            var mailPreview  = $(locators.MailPreview);

            browser.waitToBePresent(mailPreview);
            expect(mailPreview.isPresent()).to.eventually.equal(true, "Mail preview is not present");
        });

        it('email should be displayed in mailpreview on hover', function () {
            var mail  = $(locators.Mail);
            var mailPreviewEmail  = $(locators.MailPreviewEmail);

            browser.waitToBePresent(mail);
            browser.hover(mail).then(function() {
                browser.waitToBeDisplayed(mailPreviewEmail, 3000, "email not displayed in mailpreview on hover");
            });
        });
    });
});
