/* global browser, $, it, describe, before */

var chai = require('chai');
var chaiAsPromised = require('chai-as-promised');
var conditions = require('../lib/conditions');
var expect = chai.expect;
var locators = require('../lib/locators');
var when = require('mocha-bdd-when');

chai.use(chaiAsPromised);

describe('#check Logo', function () {
    before(function () {
        return browser.wait(function () {
            return browser.get('/console?ctrl=Header&m_id=tdv2-applet-uh').then(function () {
                return true;
            });
        });
    });

    when(conditions['#base']).describe('#base', function () {
        it('should exist', function () {
            var logo = $(locators.Logo);
            browser.waitToBePresent(logo);
            expect(logo.isPresent()).not.to.equal(false);
        });

        it('has href defined', function () {
            var logo = $(locators.Logo);
            browser.waitToBePresent(logo);

            logo.getAttribute('href').then(function(href) {
                expect(href).not.to.equal(false);
            });
        });

        it.skip('should have image as background', function () {
            var logo = $(locators.Logo);
            browser.waitToBePresent(logo);

            logo.getAttribute('style').then(function(style) {
                expect(style).to.equal(
                'background-image: url(https://s.yimg.com/rz/d/yahoo_en-US_f_pw_112x26.png);');
            });
        });
    });
});
