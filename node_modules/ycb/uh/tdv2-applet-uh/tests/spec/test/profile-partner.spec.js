/* global browser, $, it, describe, before */

var chai = require('chai');
var chaiAsPromised = require('chai-as-promised');
var conditions = require('../lib/conditions');
var expect = chai.expect;
var locators = require('../lib/locators');
var when = require('mocha-bdd-when');

chai.use(chaiAsPromised);

var loginUser = function() {
    browser.signIn('demo_hanlon@att.net', 'att123');
    browser.get('/console?ctrl=Header&m_id=tdv2-applet-uh&site=style&partner=att');
};

describe('#check partner Profile', function () {
    before(function () {
        return browser.wait(function () {
            // force signed out
            return browser.get('http://login.yahoo.com/config/login?logout=1').then(function () {
                return true;
            });
        });
    });

    describe('#check Sign In', function() {
        before(function () {
            return browser.wait(function () {
                return browser.get('/console?ctrl=Header&m_id=tdv2-applet-uh&site=style&partner=att').then(function () {
                    return true;
                });
            });
        });

        when(conditions['#base']).describe('#base', function () {
            it('link should exist', function () {
                var signin = $(locators.SignIn);

                browser.waitToBePresent(signin);
                expect(signin.isPresent()).to.eventually.equal(true);
            });

            it('link contains "login.yahoo.com", "partner=sbc" and "logout=1"', function () {
                var signin = $(locators.SignIn);

                browser.waitToBePresent(signin);
                signin.getAttribute('href').then(function(href) {
                    expect(href).to.contain('login.yahoo.com');
                    expect(href).to.contain('partner=sbc');
                    expect(href).not.to.contain('logout=1');
                });
            });

            it('link navigates to AT&T T-guard login page', function () {
                var signin  = $(locators.SignIn);

                browser.waitToBePresent(signin);
                browser.waitForReload(function() {
                    signin.click();
                }, 6000).then(function() {
                    browser.getCurrentUrl().then(function(url) {
                        expect(url).to.contain('loginprodx.att.net', "Link does not navigate to AT&T T-guard login page");
                    });
                });
            });
        });

        when(conditions['#login']).describe('#login', function () {
            before(function () {
                loginUser();
            });

            it('should exist', function () {
                var profile = $(locators.Profile);

                browser.waitToBePresent(profile);
                expect(profile.isPresent()).not.to.equal(false);
            });

            it('settings should exist', function () {
                var settings  = $(locators.Settings);
                var profile = $(locators.Profile);

                browser.waitToBePresent(profile);
                browser.hover(profile).then (function () {
                    expect(settings.isPresent()).to.eventually.equal(true, "'" + settings + "' is not present");

                    browser.waitToBePresent(settings);
                    expect(settings.isDisplayed()).to.eventually.equal(true, "'" + settings + "' is not displayed");

                    expect(settings.isEnabled()).to.eventually.equal(true, "'" + settings + "' is not enabled");
                });
            });

            it('signout should exist', function () {
                var signout  = $(locators.SignOut);
                var profile = $(locators.Profile);

                browser.waitToBePresent(profile);
                browser.hover(profile).then (function () {
                    browser.waitToBePresent(signout);
                    expect(signout.isPresent()).to.eventually.equal(true, "'" + signout + "' is not present");
                    expect(signout.isDisplayed()).to.eventually.equal(true, "'" + signout + "' is not displayed");
                    expect(signout.isEnabled()).to.eventually.equal(true, "'" + signout + "' is not enabled");
                });
            });

            it('settings link goes to "edit.yahoo.com" and "partner=sbc"', function () {
                var profile = $(locators.Profile);
                var settings = $(locators.Settings);

                browser.waitToBePresent(profile);
                browser.hover(profile).then (function () {
                    browser.waitToBePresent(settings);
                    settings.getAttribute('href').then(function(url) {
                        expect(url).to.contain('edit.yahoo.com');
                        expect(url).to.contain('partner=sbc');
                    });
                });
            });

            it('signout link contains "yahoo.com", "partner=sbc" and "logout=1"', function () {
                var profile = $(locators.Profile);
                var signout = $(locators.SignOut);

                browser.waitToBePresent(profile);
                browser.hover(profile).then (function () {
                    browser.waitToBePresent(signout);
                    signout.getAttribute('href').then(function(url) {
                        expect(url).to.contain('yahoo.com');
                        expect(url).to.contain('partner=sbc');
                        expect(url).to.contain('logout=1');
                    });
                });
            });
        });
    });
});
