/* global browser, $, it, describe, before */

var chai = require('chai');
var chaiAsPromised = require('chai-as-promised');
var conditions = require('../lib/conditions');
var expect = chai.expect;
var locators = require('../lib/locators');
var when = require('mocha-bdd-when');

chai.use(chaiAsPromised);

var mailCountOvrCls = 'C(#fff) Bgc(#f0162f) Fz(11px) Va(m) D(ib) Pos(a) Ta(c) W(14px) H(`15px) Bdrs(100px) P(2px) Pb(1px) End(50px) Mt(-4px)';
var overrideConfig = '&config.uh.mail.style.mailCount.badge=' + encodeURIComponent(mailCountOvrCls);

var loginUser = function() {
    browser.signIn('ucstester@yahoo.com', 'testing');
    browser.get('/console?ctrl=Header&m_id=tdv2-applet-uh' + overrideConfig);
};

describe('#check Search Config Overrides', function () {
    before(function () {
        return browser.wait(function () {
            return browser.get('/console?ctrl=Header&m_id=tdv2-applet-uh' + overrideConfig).then(function () {
                return true;
            });
        });
    });

    when(conditions['#login']).describe('#login', function () {
        before(function () {
            loginUser();
            browser.get('/console?ctrl=Header&m_id=tdv2-applet-uh' + overrideConfig);
        });

        it('mailcount should exist with overriden style', function () {
            var mailCount  = $(locators.MailCount);
            browser.waitToBePresent(mailCount);
            expect(mailCount.isPresent()).not.to.equal(false);
            mailCount.getAttribute('class').then(function(classVal) {
                expect(classVal).to.equal(mailCountOvrCls + ' V(h)');
            });
        });
    });
});
