/* global browser, $, it, describe, before */

var chai = require('chai');
var chaiAsPromised = require('chai-as-promised');
var conditions = require('../lib/conditions');
var expect = chai.expect;
var locators = require('../lib/locators');
var when = require('mocha-bdd-when');

chai.use(chaiAsPromised);


var loginUser = function() {
    browser.signIn('ucstester@yahoo.com', 'testing');
    browser.get('/console?ctrl=Header&m_id=tdv2-applet-uh');
};

describe('#check Mail', function () {
    before(function () {
        return browser.wait(function () {
            return browser.get('/console?ctrl=Header&m_id=tdv2-applet-uh').then(function () {
                return true;
            });
        });
    });

    when(conditions['#base']).describe('#base', function () {
        it('link should exist', function () {
            var mail  = $(locators.Mail);
            browser.waitToBePresent(mail);
            expect(mail.isPresent()).not.to.equal(false);
        });

        it('has href defined', function () {
            var mail  = $(locators.Mail);

            mail.getAttribute('href').then(function(href) {
                expect(href).to.contain('mail.yahoo.com');
            });
        });

        it('link goes to mail.yahoo.com', function () {
            var mail  = $(locators.Mail);

            mail.click().then(function() {
                var UH = $('#UH');
                browser.waitToBePresent(UH);
                browser.getCurrentUrl().then(function(url) {
                    expect(url).to.contain('mail.yahoo.com');
                });
            });
        });
    });

    when(conditions['#login']).describe('#login', function () {
        before(function () {
            loginUser();
            browser.get('/console?ctrl=Header&m_id=tdv2-applet-uh');
        });

        it('mailcount should exist', function () {
            var mailCount  = $(locators.MailCount);
            browser.waitToBePresent(mailCount);
            expect(mailCount.isPresent()).not.to.equal(false);
        });

        it('mailpreview should exist', function () {
            var mailPreview  = $(locators.MailPreview);
            browser.waitToBePresent(mailPreview);
            expect(mailPreview.isPresent()).not.to.equal(false);

            var signout = $(locators.SignOut);
            var profile = $(locators.Profile);
            browser.waitToBePresent(profile);

            browser.hover(profile).then(function () {
                expect(signout.isPresent()).to.eventually.equal(true, "'" + signout + "' is not present");

                browser.waitToBePresent(signout);
                expect(signout.isDisplayed()).to.eventually.equal(true, "'" + signout + "' is not displayed");

                expect(signout.isEnabled()).to.eventually.equal(true, "'" + signout + "' is not enabled");
                signout.click();
            });
        });
    });
});
