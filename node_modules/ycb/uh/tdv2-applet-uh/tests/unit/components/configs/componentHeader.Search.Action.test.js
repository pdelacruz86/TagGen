/* ------------------------------------------------------------------------
 * [SKIP]
 *  - The `search.action` config is being generated automatically.
 *  - Pattern:
 *      [intl].search.yahoo.com/search
 *  - Exception:
 *      intl = el => espanol.search.yahoo.com/search
 *      intl = us => search.yahoo.com
 */
// /*global after, before, describe, it */
// 'use strict';
// var rootRequire = require('root-require');
// var testRequire = rootRequire('tests/lib/testRequire');
//
// var commonDimensions = require('common-dimensions');
// var ConfigHelper = require('ycb-config');
// var expect = require('chai').expect;
// var fs = require('fs');
// var pkg = rootRequire('package.json');
// var util = require('util');
// var yaml = require('js-yaml');
// var ycb = testRequire('configs/componentHeader');
//
// describe.skip('configs/componentHeader.js', function () {
//     before(function() {
//         this.bundleName = pkg.name;
//         this.configHelper = new ConfigHelper();
//         this.configHelper.addConfigContents(this.bundleName, 'dimensions', 'dimensions', commonDimensions);
//         this.configHelper.addConfigContents(this.bundleName, 'config', 'config', ycb);
//     });
//
//     after(function() {
//         this.bundleName = undefined;
//         this.configHelper = undefined;
//     });
//
//     it('should be an Array', function () {
//         expect(ycb).to.be.an('Array');
//     });
//
//     describe('search', function () {
//         describe('action', function () {
//             // single run with parameter { lang: 'en-US' }.
//             describe('.single', function() {
//                 it ('{ lang: \'en-US\' }', function (done) {
//                     this.configHelper.read(this.bundleName, 'config', {lang: 'en-US'}, function getConfig(err, config) {
//                         var result = 'https://search.yahoo.com/search';
//                         var actual = config.uh.search.action;
//                         expect(result).to.deep.equal(actual);
//                         done();
//                     });
//                 });
//             });
//
//             // parametric run with external data provider 'gossip.yaml'.
//             describe('.parametric', function() {
//                 var data = yaml.safeLoad( fs.readFileSync('tests/data/search-action.yaml', 'utf8') );
//                 Object.keys(data).forEach(function getData(key) {
//                     // Formulate the context object.
//                     //
//                     // input:
//                     //      'lang:zh-Hant-HK'
//                     //
//                     // output:
//                     //      {
//                     //          lang: 'zh-Hant-HK'
//                     //      }
//                     //
//                     var context = (function getContext(key) {
//                         var data = {};
//                         var kvps = key.split(',');
//                         kvps.forEach(function processKV(kvs) {
//                             var kv = kvs.split(':');
//                             data[kv[0]] = kv[1];
//                         });
//                         return data;
//                     }(key));
//
//                     // Get the config given a context object.
//                     it(util.inspect(context, {depth: null}), function (done) {
//                         this.configHelper.read(this.bundleName, 'config', context, function getConfig(err, config) {
//                             var result = data[key].action;
//                             var actual = config.uh.search.action;
//                             expect(result).to.deep.equal(actual);
//                             done();
//                         });
//                     });
//                 });
//             });
//         });
//     });
// });
