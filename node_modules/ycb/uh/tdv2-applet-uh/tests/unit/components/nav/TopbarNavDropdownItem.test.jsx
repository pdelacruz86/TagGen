/*global global, require, before, after, beforeEach, describe, it */
/*jshint -W030, -W097 */
var _require = require('root-require');
var expect = require('chai').expect;
var Immutable = require('immutable');
var jsx = require('jsx-test').jsxTranspile(process.env.JENKINS_MOCHA_COVERAGE);
var MockContext = require('touchdown-v2/utils/MockComponentContext');
var mockery = require('mockery');

describe('components/nav/TopbarNavDropdownMenu.jsx', function () {
    var TopbarNavDropdownItem;

    before(function () {
        mockery.registerMock(
            './TopbarNavDropdownMenu',
            _require('tests/mock/components/nav/TopbarNavDropdownMenu.jsx')
        );
        mockery.registerMock(
            'react-icons',
            _require('tests/mock/react-icons')
        );
        mockery.registerMock(
            'react-i13n',
            _require('tests/mock/react-i13n')
        );
        mockery.registerMock(
           'react-intl',
            _require('tests/mock/react-intl')
        );
        mockery.enable({
            useCleanCache: true,
            warnOnUnregistered: false
        });

        TopbarNavDropdownItem = _require('components/nav/TopbarNavDropdownItem.jsx');
    });

    after(function () {
        mockery.disable();
        mockery.deregisterAll();
    });

    describe('#component', function () {
        var component;
        var data;
        var methods;

        before(function () {
            data = Immutable.fromJS({
                group: 'main',
                index: 0,
                is_open: false,
                item: {
                    follow: true,
                    id: 'home',
                    link: 'https://yahoo.com',
                    order: 1,
                    parent: 'root',
                    title: 'Home'
                }
            });
            methods = {
                click: function() {},
                getClassNameLinkHomeIconHomeStyle: function() {},
                getClassNameLinkHomeContent: function() {},
                getClassNameLinkHomeWrapper: function() {}
            };
        });

        beforeEach(function () {
            var context = MockContext({});
            context.conf = _require('tests/mock/config');
            context.session = _require('tests/mock/session').toJS();
            context.theme = _require('tests/mock/theme');

            component = jsx.withContext(TopbarNavDropdownItem, context);
        });

        it('should have displayName "TopbarNavDropdownItem:withContext"', function () {
            expect(component).to.be.ok;
            expect(component.displayName).to.be.equal('TopbarNavDropdownItem:withContext');
        });

        describe('#render', function () {
            var renderedComponent;
            var domNode;

            beforeEach(function () {
                renderedComponent = jsx.renderComponent(component, {data: data, methods: methods});
                domNode = renderedComponent.getDOMNode();
            });

            it('should render correctly', function () {
                expect(renderedComponent).to.be.ok;
                expect(domNode.nodeName).to.be.equal('LI');
                expect(domNode.id).to.be.equal('uh-tb-home');
            });
        });
    });
});
