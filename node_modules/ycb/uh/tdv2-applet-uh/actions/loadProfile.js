'use strict';

var debug = require('debug')('uh:actions:loadProfile');
var lib = require('../lib');

var ProfileActions = require('tdv2-service-profile/actions/ProfileActions');

// constants
var IS_CLIENT = lib.isClient();

function getMode(payload) {
    var mode = null;
    if (payload && payload.componentProps && payload.componentProps.componentConfig) {
        mode = payload.componentProps.componentConfig.getIn(['uh', 'profile', 'mode']);
    }
    return mode;
}

/**
 * Load profile data for a header
 * @param {Object} context request context
 * @param {Object} payload metadata passed in by component
 * @param {Function} done callback function
 */
module.exports = function loadProfile(context, payload, done) {
    debug('context.session.isLightWeightBrowser', context.session.isLightWeightBrowser);
    debug('mode', getMode(payload));

    if (IS_CLIENT || payload.mode === 'client') {
        debug('client');
        context.executeAction(ProfileActions.getProfile, {}, done);
        return;
    }

    debug('server');

    if (context.session.isLightWeightBrowser || getMode(payload) === 'server') {
        context.executeAction(ProfileActions.getProfile, {}, done);
        return;
    }

    done && done(null);
};
