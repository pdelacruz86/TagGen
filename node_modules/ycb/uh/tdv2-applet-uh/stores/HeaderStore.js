/**
 * @class HeaderStore
 */

'use strict';

var createStore = require('fluxible-immutable-utils').createImmutableStore;
var debug = require('debug')('uh:stores:HeaderStore');

var DEFAULT_SITE = false;

var HeaderStore = createStore({

    storeName: 'HeaderStore',

    handlers: {
        NAVIGATE_SUCCESS: '_handleNavSuccess'
    },

    _handleNavSuccess: function(payload) {
        var site;

        debug('_handleNavSuccess', 'payload', payload.toJS());

        // Get the 'site' data based on the following orders.

        // 1. payload.params.contentSite
        site = payload.getIn(['params', 'contentSite']);

        // 2. payload.contentSite
        if (!site) {
            site = payload.get('contentSite');
        }

        // 3. query.site
        if (!site) {
            site = payload.getIn(['query', 'site']);
        }

        // 4. default
        if (!site) {
            site = DEFAULT_SITE;
        }

        debug('_handleNavSuccess', 'site', site);

        this.setState(this._state.withMutations(function updateState(state) {
            state.set('site', site);
        }));
    },

    getState: function() {
        return this._state;
    },

    getSite: function() {
        return this._state.get('site') || DEFAULT_SITE;
    }
});

module.exports = HeaderStore;
