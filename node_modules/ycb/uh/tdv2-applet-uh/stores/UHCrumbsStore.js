/**
 * @class UHCrumbsStore
 */

'use strict';

var createStore = require('fluxible-immutable-utils').createImmutableStore;

var UHCrumbsStore = createStore({

    storeName: 'UHCrumbsStore',

    statics: {
        handlers: {
            'FETCH_UHCRUMBS_SUCCESS': '_receiveCrumbs',
            'FETCH_UHCRUMBS': 'startIsFetching',
            'FETCH_UHCRUMBS_FAILURE': 'endIsFetching'
        }
    },

    /**
     * Update the crumbs
     * @method _receiveCrumbs
     */
    _receiveCrumbs: function (payload) {
        this.setState(this._state.withMutations(function updateState (state) {
            state.set('ucsCrumb', payload.ucsCrumb);
            state.set('mailCountCrumb', payload.mailCountCrumb);
            state.set('accountSwitchCrumb', payload.accountSwitchCrumb);
            state.set('isFetching', false);
        }));
    },

    /**
     * update fetching boolean
     * @method endIsFetching
     */
    endIsFetching: function () {
        this.setState(this._state.set('isFetching', false));
    },

    /**
     * update fetching boolean
     * @method startIsFetching
     */
    startIsFetching: function () {
        this.setState(this._state.set('isFetching', true));
    },

    /**
     * Access for isFetching
     * @method isFetching
     */
    getIsFetching: function () {
        return this._state.get('isFetching');
    },

    /**
     * Access for ucsCrumb
     * @method getUcsCrumb
     */
    getUcsCrumb: function () {
        return this._state.get('ucsCrumb');
    },

    /**
     * Access for MailCountCrumb
     * @method getMailCountCrumb
     */
    getMailCountCrumb: function () {
        return this._state.get('mailCountCrumb');
    },

    /**
     * Access for accountSwitchCrumb
     * @method getAccountSwitchCrumb
     */
    getAccountSwitchCrumb: function () {
        return this._state.get('accountSwitchCrumb');
    }
});

module.exports = UHCrumbsStore;
